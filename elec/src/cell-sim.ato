from "generics/capacitors.ato" import Capacitor
from "generics/resistors.ato" import Resistor, I2CPullup
from "generics/inductors.ato" import Inductor
from "generics/diodes.ato" import PowerDiodeOr
from "generics/interfaces.ato" import Power, SPI, I2C, DiffPair
from "generics/mosfets.ato" import NFET
from "generics/leds.ato" import LEDIndicatorGreen
from "generics/regulators.ato" import IsolatedRegulator, Regulator, LDO
from "generics/vdivs.ato" import _VDiv, VDiv
from "generics/inductors.ato" import Inductor
from "generics/filters.ato" import PiFilter
from "generics/vdivs.ato" import _VDiv

from "cell.ato" import Cell
from "components/esp32-s3/elec/src/esp32-s3.ato" import ESP32S3
from "components/level-shifter/elec/src/level-shifter.ato" import LevelShifter
from "components/sk6805-ec20/elec/src/sk6805-ec20.ato" import SK6805EC20
from "components/ldk220m-r/elec/src/ldk220m-r.ato" import LDK220M_R
from "components/lv2842xlvddcr/lv2842kit.ato" import LV2842Kit
from "components/usb-connectors/usb-connectors.ato" import USBCConn
from "components/tca9548apwr/elec/src/tca9548apwr.ato" import TCA9548APWR
from "components/xt-connectors/xt-connectors.ato" import XT30_Male_Right_Angle
from "components/saleae-header/saleae-header.ato" import SaleaeHeader
from "components/YNR4030.ato" import YNR4030_101M
from "components/current-sensor.ato" import CurrentSensor
from "components/CD74HC4067SM96.ato" import CD74HC4067SM96 # multiplexer
from "components/banana-power.ato" import BananaPower
from "components/lcd-connector.ato" import LCDConnector
from "components/RVT1E471M1010_C3351.ato" import RVT1E471M1010_C3351
from "components/7447709101.ato" import Wurth7447709101
from "components/FMF06FTHR010.ato" import FMF06FTHR010_LHL
from "components/IDC-VSH-connector.ato" import IDC_VSH_connector


module CellSim:
    power_in = new Power
    power_batt = new Power
    power_5v = new Power
    power_3v3 = new Power
    dmm_out = new Power

    micro = new ESP32S3
    usbc = new USBCConn

    # Power input #TODO: add input filter and current sensor
    input_filter = new PiFilter
    power_connector = new XT30_Male_Right_Angle
    current_sensor = new CurrentSensor
    current_sensor.current = 5A
    power_connector.power ~ input_filter.power_in
    input_filter.power_out ~ current_sensor.power_in
    current_sensor.power_out ~ power_in

    # Configure current sensor
    power_3v3 ~ current_sensor.power
    current_sensor.shunt -> FMF06FTHR010_LHL
    input_filter.C1 -> RVT1E471M1010_C3351 # 470uF Electrolytic
    input_filter.L1 -> Wurth7447709101 # 100uH
    input_filter.C2.value = 10uF +/- 20%
    input_filter.C2.package = "0805"

    # Input ceramic capacitors
    input_cap_1 = new Capacitor
    input_cap_1.value = 10uF +/- 20%
    input_cap_1.package = "0805"
    power_in ~ input_cap_1.power

    input_cap_2 = new Capacitor
    input_cap_2.value = 10uF +/- 20%
    input_cap_2.package = "0805"
    power_in ~ input_cap_2.power

    # Input voltage sense
    voltage_sense = new VDiv
    power_in ~ voltage_sense.power
    voltage_sense.v_out = 0V to 3V
    voltage_sense.out ~ micro.io16

    # DMM output
    dmm_connector = new BananaPower
    dmm_connector.power ~ dmm_out

    # Micro connections
    power_3v3 ~ micro.power
    usbc.usb2 ~ micro.usb2

    # LCD
    lcd = new LCDConnector
    power_3v3 ~ lcd.power
    micro.i2c ~ lcd.i2c
    lcd.address = "0x3C"

    # I2C mux
    mux_1 = new TCA9548APWR
    power_3v3 ~ mux_1.power
    micro.i2c ~ mux_1.i2c
    mux_1.address = "0x70"

    mux_2 = new TCA9548APWR
    power_3v3 ~ mux_2.power
    micro.i2c2 ~ mux_2.i2c
    mux_2.address = "0x70"


    i2c_pullup = new I2CPullup
    power_3v3 ~ i2c_pullup.power
    micro.i2c ~ i2c_pullup.i2c
    i2c_pullup.r_scl.value = 2kohm +/- 20%
    i2c_pullup.r_sda.value = 2kohm +/- 20%
    i2c_pullup.r_scl.package = "0402"
    i2c_pullup.r_sda.package = "0402"

    i2c_2_pullup = new I2CPullup
    power_3v3 ~ i2c_2_pullup.power
    micro.i2c2 ~ i2c_2_pullup.i2c
    i2c_2_pullup.r_scl.value = 2kohm +/- 20%
    i2c_2_pullup.r_sda.value = 2kohm +/- 20%
    i2c_2_pullup.r_scl.package = "0402"
    i2c_2_pullup.r_sda.package = "0402"

    # regulator to 5V
    buck = new LV2842Kit
    buck.v_in = 12V +/- 10%
    buck.v_out = 5V +/- 5%
    power_in ~ buck.power_in

    # Diode or USB supply to 5V rail
    diode_or = new PowerDiodeOr
    usbc.power ~ diode_or.power_in1
    buck.power_out ~ diode_or.power_in2
    diode_or.power_out ~ power_5v

    # regulator to 3.3V
    ldo3v3 = new LDK220M_R
    ldo3v3.v_in = buck.v_out
    ldo3v3.v_out = 3.3V +/- 10%
    power_5v ~ ldo3v3.power_in
    ldo3v3.power_out ~ power_3v3

    # LEDs
    level_shifter = new LevelShifter
    power_3v3 ~ level_shifter.power_lv
    power_5v ~ level_shifter.power_hv
    micro.io15 ~ level_shifter.lv_signal

    # Multiplexer
    dmm_mux = new CD74HC4067SM96
    power_3v3 ~ dmm_mux.power
    micro.io5 ~ dmm_mux.nEnable
    micro.io1 ~ dmm_mux.CH0
    micro.io2 ~ dmm_mux.CH1
    micro.io3 ~ dmm_mux.CH2
    micro.io4 ~ dmm_mux.CH3

    # Connect cells in a stack
    cell1 = new Cell
    mux_1.i2c0 ~ cell1.i2c
    power_in ~ cell1.power_in
    power_5v ~ cell1.power_5v
    power_3v3 ~ cell1.power_isolator
    dmm_out ~ cell1.dmm_out
    level_shifter.hv_signal ~ cell1.cell_down.led_data
    # power_in.gnd ~ cell1.cell_down.cell #
    dmm_mux.CH0 ~ cell1.dmm_relay_enable

    cell2 = new Cell
    mux_1.i2c1 ~ cell2.i2c
    power_in ~ cell2.power_in
    power_5v ~ cell2.power_5v
    power_3v3 ~ cell2.power_isolator
    dmm_out ~ cell2.dmm_out
    cell1.cell_up ~ cell2.cell_down
    dmm_mux.CH1 ~ cell2.dmm_relay_enable

    cell3 = new Cell
    mux_1.i2c2 ~ cell3.i2c
    power_in ~ cell3.power_in
    power_5v ~ cell3.power_5v
    power_3v3 ~ cell3.power_isolator
    dmm_out ~ cell3.dmm_out
    cell2.cell_up ~ cell3.cell_down
    dmm_mux.CH2 ~ cell3.dmm_relay_enable

    cell4 = new Cell
    mux_1.i2c3 ~ cell4.i2c
    power_in ~ cell4.power_in
    power_5v ~ cell4.power_5v
    power_3v3 ~ cell4.power_isolator
    dmm_out ~ cell4.dmm_out
    cell3.cell_up ~ cell4.cell_down
    dmm_mux.CH3 ~ cell4.dmm_relay_enable

    cell5 = new Cell
    mux_1.i2c4 ~ cell5.i2c
    power_in ~ cell5.power_in
    power_5v ~ cell5.power_5v
    power_3v3 ~ cell5.power_isolator
    dmm_out ~ cell5.dmm_out
    cell4.cell_up ~ cell5.cell_down
    dmm_mux.CH4 ~ cell5.dmm_relay_enable

    cell6 = new Cell
    mux_1.i2c5 ~ cell6.i2c
    power_in ~ cell6.power_in
    power_5v ~ cell6.power_5v
    power_3v3 ~ cell6.power_isolator
    dmm_out ~ cell6.dmm_out
    cell5.cell_up ~ cell6.cell_down
    dmm_mux.CH5 ~ cell6.dmm_relay_enable

    cell7 = new Cell
    mux_1.i2c6 ~ cell7.i2c
    power_in ~ cell7.power_in
    power_5v ~ cell7.power_5v
    power_3v3 ~ cell7.power_isolator
    dmm_out ~ cell7.dmm_out
    cell6.cell_up ~ cell7.cell_down
    dmm_mux.CH6 ~ cell7.dmm_relay_enable

    cell8 = new Cell
    mux_1.i2c7 ~ cell8.i2c
    power_in ~ cell8.power_in
    power_5v ~ cell8.power_5v
    power_3v3 ~ cell8.power_isolator
    dmm_out ~ cell8.dmm_out
    cell7.cell_up ~ cell8.cell_down
    dmm_mux.CH7 ~ cell8.dmm_relay_enable

    cell9 = new Cell
    mux_2.i2c0 ~ cell9.i2c
    power_in ~ cell9.power_in
    power_5v ~ cell9.power_5v
    power_3v3 ~ cell9.power_isolator
    dmm_out ~ cell9.dmm_out
    cell8.cell_up ~ cell9.cell_down
    dmm_mux.CH8 ~ cell9.dmm_relay_enable

    cell10 = new Cell
    mux_2.i2c1 ~ cell10.i2c
    power_in ~ cell10.power_in
    power_5v ~ cell10.power_5v
    power_3v3 ~ cell10.power_isolator
    dmm_out ~ cell10.dmm_out
    cell9.cell_up ~ cell10.cell_down
    dmm_mux.CH9 ~ cell10.dmm_relay_enable

    cell11 = new Cell
    mux_2.i2c2 ~ cell11.i2c
    power_in ~ cell11.power_in
    power_5v ~ cell11.power_5v
    power_3v3 ~ cell11.power_isolator
    dmm_out ~ cell11.dmm_out
    cell10.cell_up ~ cell11.cell_down
    dmm_mux.CH10 ~ cell11.dmm_relay_enable

    cell12 = new Cell
    mux_2.i2c3 ~ cell12.i2c
    power_in ~ cell12.power_in
    power_5v ~ cell12.power_5v
    power_3v3 ~ cell12.power_isolator
    dmm_out ~ cell12.dmm_out
    cell11.cell_up ~ cell12.cell_down
    dmm_mux.CH11 ~ cell12.dmm_relay_enable

    cell13 = new Cell
    mux_2.i2c4 ~ cell13.i2c
    power_in ~ cell13.power_in
    power_5v ~ cell13.power_5v
    power_3v3 ~ cell13.power_isolator
    dmm_out ~ cell13.dmm_out
    cell12.cell_up ~ cell13.cell_down
    dmm_mux.CH12 ~ cell13.dmm_relay_enable

    cell14 = new Cell
    mux_2.i2c5 ~ cell14.i2c
    power_in ~ cell14.power_in
    power_5v ~ cell14.power_5v
    power_3v3 ~ cell14.power_isolator
    dmm_out ~ cell14.dmm_out
    cell13.cell_up ~ cell14.cell_down
    dmm_mux.CH13 ~ cell14.dmm_relay_enable

    cell15 = new Cell
    mux_2.i2c6 ~ cell15.i2c
    power_in ~ cell15.power_in
    power_5v ~ cell15.power_5v
    power_3v3 ~ cell15.power_isolator
    dmm_out ~ cell15.dmm_out
    cell14.cell_up ~ cell15.cell_down
    dmm_mux.CH14 ~ cell15.dmm_relay_enable

    cell16 = new Cell
    mux_2.i2c7 ~ cell16.i2c
    power_in ~ cell16.power_in
    power_5v ~ cell16.power_5v
    power_3v3 ~ cell16.power_isolator
    dmm_out ~ cell16.dmm_out
    cell15.cell_up ~ cell16.cell_down
    dmm_mux.CH15 ~ cell16.dmm_relay_enable

    # IDC-VSH connector
    idc_vsh = new IDC_VSH_connector
    cell1.power_out.gnd ~ idc_vsh.cell0
    cell1.power_out.vcc ~ idc_vsh.cell1
    cell2.power_out.vcc ~ idc_vsh.cell2
    cell3.power_out.vcc ~ idc_vsh.cell3
    cell4.power_out.vcc ~ idc_vsh.cell4
    cell5.power_out.vcc ~ idc_vsh.cell5
    cell6.power_out.vcc ~ idc_vsh.cell6
    cell7.power_out.vcc ~ idc_vsh.cell7
    cell8.power_out.vcc ~ idc_vsh.cell8
    cell9.power_out.vcc ~ idc_vsh.cell9
    cell10.power_out.vcc ~ idc_vsh.cell10
    cell11.power_out.vcc ~ idc_vsh.cell11
    cell12.power_out.vcc ~ idc_vsh.cell12
    cell13.power_out.vcc ~ idc_vsh.cell13
    cell14.power_out.vcc ~ idc_vsh.cell14
    cell15.power_out.vcc ~ idc_vsh.cell15
    cell16.power_out.vcc ~ idc_vsh.cell16

    # Power net tie jumpers
    power_jumper_vcc = new Resistor
    power_jumper_vcc.value = 0ohm
    power_jumper_vcc.package = "0402"
    cell16.power_out.vcc ~ power_jumper_vcc.p1
    power_jumper_vcc.p2 ~ idc_vsh.power.vcc

    power_jumper_gnd = new Resistor 
    power_jumper_gnd.value = 0ohm
    power_jumper_gnd.package = "0402"
    cell1.power_out.gnd ~ power_jumper_gnd.p1
    power_jumper_gnd.p2 ~ idc_vsh.power.gnd

    # Debugging
    i2c_debug = new SaleaeHeader
    micro.i2c ~ i2c_debug.i2c
    micro.i2c2 ~ i2c_debug.i2c2
    i2c_debug.gnd ~ power_in.gnd


    # Netname overrides
    power_in.vcc.override_net_name = "POWER_IN_VCC"
    power_in.gnd.override_net_name = "POWER_IN_GND"
    power_in.vcc.override_net_name = "POWER_IN_VCC"
    power_batt.vcc.override_net_name = "POWER_BATT_VCC"
    power_5v.vcc.override_net_name = "POWER_5V_VCC"
    power_3v3.vcc.override_net_name = "POWER_3V3_VCC"
    dmm_out.vcc.override_net_name = "DMM_OUT_VCC"
    dmm_out.gnd.override_net_name = "DMM_OUT_GND"

    cell1._power_5v.vcc.override_net_name = "CELL1_5V_VCC"
    cell1._power_3v3.vcc.override_net_name = "CELL1_3V3_VCC"
    cell1._power_3v3.gnd.override_net_name = "CELL1_GND" # only cell 1 has a ground
    cell1._iso_i2c.scl.override_net_name = "CELL1_I2C_SCL"
    cell1._iso_i2c.sda.override_net_name = "CELL1_I2C_SDA"
    cell1.buck.enable.override_net_name = "CELL1_BUCK_ENABLE"
    cell1.ldo.enable.override_net_name = "CELL1_LDO_ENABLE"
    cell1.load_switch.control.override_net_name = "CELL1_LOAD_SWITCH_CONTROL"
    cell1.output_relay.input.override_net_name = "CELL1_OUTPUT_RELAY_CONTROL"
    cell1.dmm_relay.input.override_net_name = "CELL1_DMM_RELAY_CONTROL"
    cell1.current_sense.output.override_net_name = "CELL1_CURRENT_SENSE_OUTPUT"
    cell1.filter.power_out.vcc.override_net_name = "CELL1_FILTER_POWER_OUT_VCC"
    cell1.buck.power_out.vcc.override_net_name = "CELL1_BUCK_POWER_OUT_VCC"
    cell1.ldo.power_out.vcc.override_net_name = "CELL1_LDO_POWER_OUT_VCC"
    cell1.current_sense.power_out.vcc.override_net_name = "CELL1_CURRENT_SENSE_POWER_OUT_VCC"

    cell2._power_5v.vcc.override_net_name = "CELL2_5V_VCC"
    cell2._power_3v3.vcc.override_net_name = "CELL2_3V3_VCC"
    cell2._iso_i2c.scl.override_net_name = "CELL2_I2C_SCL"
    cell2._iso_i2c.sda.override_net_name = "CELL2_I2C_SDA"
    cell2.buck.enable.override_net_name = "CELL2_BUCK_ENABLE"
    cell2.ldo.enable.override_net_name = "CELL2_LDO_ENABLE"
    cell2.load_switch.control.override_net_name = "CELL2_LOAD_SWITCH_CONTROL"
    cell2.output_relay.input.override_net_name = "CELL2_OUTPUT_RELAY_CONTROL"
    cell2.dmm_relay.input.override_net_name = "CELL2_DMM_RELAY_CONTROL"
    cell2.current_sense.output.override_net_name = "CELL2_CURRENT_SENSE_OUTPUT"
    cell2.filter.power_out.vcc.override_net_name = "CELL2_FILTER_POWER_OUT_VCC"
    cell2.buck.power_out.vcc.override_net_name = "CELL2_BUCK_POWER_OUT_VCC"
    cell2.ldo.power_out.vcc.override_net_name = "CELL2_LDO_POWER_OUT_VCC"
    cell2.current_sense.power_out.vcc.override_net_name = "CELL2_CURRENT_SENSE_POWER_OUT_VCC"

    cell3._power_5v.vcc.override_net_name = "CELL3_5V_VCC"
    cell3._power_3v3.vcc.override_net_name = "CELL3_3V3_VCC"
    cell3._iso_i2c.scl.override_net_name = "CELL3_I2C_SCL"
    cell3._iso_i2c.sda.override_net_name = "CELL3_I2C_SDA"
    cell3.buck.enable.override_net_name = "CELL3_BUCK_ENABLE"
    cell3.ldo.enable.override_net_name = "CELL3_LDO_ENABLE"
    cell3.load_switch.control.override_net_name = "CELL3_LOAD_SWITCH_CONTROL"
    cell3.output_relay.input.override_net_name = "CELL3_OUTPUT_RELAY_CONTROL"
    cell3.dmm_relay.input.override_net_name = "CELL3_DMM_RELAY_CONTROL"
    cell3.current_sense.output.override_net_name = "CELL3_CURRENT_SENSE_OUTPUT"
    cell3.filter.power_out.vcc.override_net_name = "CELL3_FILTER_POWER_OUT_VCC"
    cell3.buck.power_out.vcc.override_net_name = "CELL3_BUCK_POWER_OUT_VCC"
    cell3.ldo.power_out.vcc.override_net_name = "CELL3_LDO_POWER_OUT_VCC"
    cell3.current_sense.power_out.vcc.override_net_name = "CELL3_CURRENT_SENSE_POWER_OUT_VCC"

    cell4._power_5v.vcc.override_net_name = "CELL4_5V_VCC"
    cell4._power_3v3.vcc.override_net_name = "CELL4_3V3_VCC"
    cell4._iso_i2c.scl.override_net_name = "CELL4_I2C_SCL"
    cell4._iso_i2c.sda.override_net_name = "CELL4_I2C_SDA"
    cell4.buck.enable.override_net_name = "CELL4_BUCK_ENABLE"
    cell4.ldo.enable.override_net_name = "CELL4_LDO_ENABLE"
    cell4.load_switch.control.override_net_name = "CELL4_LOAD_SWITCH_CONTROL"
    cell4.output_relay.input.override_net_name = "CELL4_OUTPUT_RELAY_CONTROL"
    cell4.dmm_relay.input.override_net_name = "CELL4_DMM_RELAY_CONTROL"
    cell4.current_sense.output.override_net_name = "CELL4_CURRENT_SENSE_OUTPUT"
    cell4.filter.power_out.vcc.override_net_name = "CELL4_FILTER_POWER_OUT_VCC"
    cell4.buck.power_out.vcc.override_net_name = "CELL4_BUCK_POWER_OUT_VCC"
    cell4.ldo.power_out.vcc.override_net_name = "CELL4_LDO_POWER_OUT_VCC"
    cell4.current_sense.power_out.vcc.override_net_name = "CELL4_CURRENT_SENSE_POWER_OUT_VCC"

    cell5._power_5v.vcc.override_net_name = "CELL5_5V_VCC"
    cell5._power_3v3.vcc.override_net_name = "CELL5_3V3_VCC"
    cell5._iso_i2c.scl.override_net_name = "CELL5_I2C_SCL"
    cell5._iso_i2c.sda.override_net_name = "CELL5_I2C_SDA"
    cell5.buck.enable.override_net_name = "CELL5_BUCK_ENABLE"
    cell5.ldo.enable.override_net_name = "CELL5_LDO_ENABLE"
    cell5.load_switch.control.override_net_name = "CELL5_LOAD_SWITCH_CONTROL"
    cell5.output_relay.input.override_net_name = "CELL5_OUTPUT_RELAY_CONTROL"
    cell5.dmm_relay.input.override_net_name = "CELL5_DMM_RELAY_CONTROL"
    cell5.current_sense.output.override_net_name = "CELL5_CURRENT_SENSE_OUTPUT"
    cell5.filter.power_out.vcc.override_net_name = "CELL5_FILTER_POWER_OUT_VCC"
    cell5.buck.power_out.vcc.override_net_name = "CELL5_BUCK_POWER_OUT_VCC"
    cell5.ldo.power_out.vcc.override_net_name = "CELL5_LDO_POWER_OUT_VCC"
    cell5.current_sense.power_out.vcc.override_net_name = "CELL5_CURRENT_SENSE_POWER_OUT_VCC"

    cell6._power_5v.vcc.override_net_name = "CELL6_5V_VCC"
    cell6._power_3v3.vcc.override_net_name = "CELL6_3V3_VCC"
    cell6._iso_i2c.scl.override_net_name = "CELL6_I2C_SCL"
    cell6._iso_i2c.sda.override_net_name = "CELL6_I2C_SDA"
    cell6.buck.enable.override_net_name = "CELL6_BUCK_ENABLE"
    cell6.ldo.enable.override_net_name = "CELL6_LDO_ENABLE"
    cell6.load_switch.control.override_net_name = "CELL6_LOAD_SWITCH_CONTROL"
    cell6.output_relay.input.override_net_name = "CELL6_OUTPUT_RELAY_CONTROL"
    cell6.dmm_relay.input.override_net_name = "CELL6_DMM_RELAY_CONTROL"
    cell6.current_sense.output.override_net_name = "CELL6_CURRENT_SENSE_OUTPUT"
    cell6.filter.power_out.vcc.override_net_name = "CELL6_FILTER_POWER_OUT_VCC"
    cell6.buck.power_out.vcc.override_net_name = "CELL6_BUCK_POWER_OUT_VCC"
    cell6.ldo.power_out.vcc.override_net_name = "CELL6_LDO_POWER_OUT_VCC"
    cell6.current_sense.power_out.vcc.override_net_name = "CELL6_CURRENT_SENSE_POWER_OUT_VCC"

    cell7._power_5v.vcc.override_net_name = "CELL7_5V_VCC"
    cell7._power_3v3.vcc.override_net_name = "CELL7_3V3_VCC"
    cell7._iso_i2c.scl.override_net_name = "CELL7_I2C_SCL"
    cell7._iso_i2c.sda.override_net_name = "CELL7_I2C_SDA"
    cell7.buck.enable.override_net_name = "CELL7_BUCK_ENABLE"
    cell7.ldo.enable.override_net_name = "CELL7_LDO_ENABLE"
    cell7.load_switch.control.override_net_name = "CELL7_LOAD_SWITCH_CONTROL"
    cell7.output_relay.input.override_net_name = "CELL7_OUTPUT_RELAY_CONTROL"
    cell7.dmm_relay.input.override_net_name = "CELL7_DMM_RELAY_CONTROL"
    cell7.current_sense.output.override_net_name = "CELL7_CURRENT_SENSE_OUTPUT"
    cell7.filter.power_out.vcc.override_net_name = "CELL7_FILTER_POWER_OUT_VCC"
    cell7.buck.power_out.vcc.override_net_name = "CELL7_BUCK_POWER_OUT_VCC"
    cell7.ldo.power_out.vcc.override_net_name = "CELL7_LDO_POWER_OUT_VCC"
    cell7.current_sense.power_out.vcc.override_net_name = "CELL7_CURRENT_SENSE_POWER_OUT_VCC"

    cell8._power_5v.vcc.override_net_name = "CELL8_5V_VCC"
    cell8._power_3v3.vcc.override_net_name = "CELL8_3V3_VCC"
    cell8._iso_i2c.scl.override_net_name = "CELL8_I2C_SCL"
    cell8._iso_i2c.sda.override_net_name = "CELL8_I2C_SDA"
    cell8.buck.enable.override_net_name = "CELL8_BUCK_ENABLE"
    cell8.ldo.enable.override_net_name = "CELL8_LDO_ENABLE"
    cell8.load_switch.control.override_net_name = "CELL8_LOAD_SWITCH_CONTROL"
    cell8.output_relay.input.override_net_name = "CELL8_OUTPUT_RELAY_CONTROL"
    cell8.dmm_relay.input.override_net_name = "CELL8_DMM_RELAY_CONTROL"
    cell8.current_sense.output.override_net_name = "CELL8_CURRENT_SENSE_OUTPUT"
    cell8.filter.power_out.vcc.override_net_name = "CELL8_FILTER_POWER_OUT_VCC"
    cell8.buck.power_out.vcc.override_net_name = "CELL8_BUCK_POWER_OUT_VCC"
    cell8.ldo.power_out.vcc.override_net_name = "CELL8_LDO_POWER_OUT_VCC"
    cell8.current_sense.power_out.vcc.override_net_name = "CELL8_CURRENT_SENSE_POWER_OUT_VCC"

    cell9._power_5v.vcc.override_net_name = "CELL9_5V_VCC"
    cell9._power_3v3.vcc.override_net_name = "CELL9_3V3_VCC"
    cell9._iso_i2c.scl.override_net_name = "CELL9_I2C_SCL"
    cell9._iso_i2c.sda.override_net_name = "CELL9_I2C_SDA"
    cell9.buck.enable.override_net_name = "CELL9_BUCK_ENABLE"
    cell9.ldo.enable.override_net_name = "CELL9_LDO_ENABLE"
    cell9.load_switch.control.override_net_name = "CELL9_LOAD_SWITCH_CONTROL"
    cell9.output_relay.input.override_net_name = "CELL9_OUTPUT_RELAY_CONTROL"
    cell9.dmm_relay.input.override_net_name = "CELL9_DMM_RELAY_CONTROL"
    cell9.current_sense.output.override_net_name = "CELL9_CURRENT_SENSE_OUTPUT"
    cell9.filter.power_out.vcc.override_net_name = "CELL9_FILTER_POWER_OUT_VCC"
    cell9.buck.power_out.vcc.override_net_name = "CELL9_BUCK_POWER_OUT_VCC"
    cell9.ldo.power_out.vcc.override_net_name = "CELL9_LDO_POWER_OUT_VCC"
    cell9.current_sense.power_out.vcc.override_net_name = "CELL9_CURRENT_SENSE_POWER_OUT_VCC"

    cell10._power_5v.vcc.override_net_name = "CELL10_5V_VCC"
    cell10._power_3v3.vcc.override_net_name = "CELL10_3V3_VCC"
    cell10._iso_i2c.scl.override_net_name = "CELL10_I2C_SCL"
    cell10._iso_i2c.sda.override_net_name = "CELL10_I2C_SDA"
    cell10.buck.enable.override_net_name = "CELL10_BUCK_ENABLE"
    cell10.ldo.enable.override_net_name = "CELL10_LDO_ENABLE"
    cell10.load_switch.control.override_net_name = "CELL10_LOAD_SWITCH_CONTROL"
    cell10.output_relay.input.override_net_name = "CELL10_OUTPUT_RELAY_CONTROL"
    cell10.dmm_relay.input.override_net_name = "CELL10_DMM_RELAY_CONTROL"
    cell10.current_sense.output.override_net_name = "CELL10_CURRENT_SENSE_OUTPUT"
    cell10.filter.power_out.vcc.override_net_name = "CELL10_FILTER_POWER_OUT_VCC"
    cell10.buck.power_out.vcc.override_net_name = "CELL10_BUCK_POWER_OUT_VCC"
    cell10.ldo.power_out.vcc.override_net_name = "CELL10_LDO_POWER_OUT_VCC"
    cell10.current_sense.power_out.vcc.override_net_name = "CELL10_CURRENT_SENSE_POWER_OUT_VCC"

    cell11._power_5v.vcc.override_net_name = "CELL11_5V_VCC"
    cell11._power_3v3.vcc.override_net_name = "CELL11_3V3_VCC"
    cell11._iso_i2c.scl.override_net_name = "CELL11_I2C_SCL"
    cell11._iso_i2c.sda.override_net_name = "CELL11_I2C_SDA"
    cell11.buck.enable.override_net_name = "CELL11_BUCK_ENABLE"
    cell11.ldo.enable.override_net_name = "CELL11_LDO_ENABLE"
    cell11.load_switch.control.override_net_name = "CELL11_LOAD_SWITCH_CONTROL"
    cell11.output_relay.input.override_net_name = "CELL11_OUTPUT_RELAY_CONTROL"
    cell11.dmm_relay.input.override_net_name = "CELL11_DMM_RELAY_CONTROL"
    cell11.current_sense.output.override_net_name = "CELL11_CURRENT_SENSE_OUTPUT"
    cell11.filter.power_out.vcc.override_net_name = "CELL11_FILTER_POWER_OUT_VCC"
    cell11.buck.power_out.vcc.override_net_name = "CELL11_BUCK_POWER_OUT_VCC"
    cell11.ldo.power_out.vcc.override_net_name = "CELL11_LDO_POWER_OUT_VCC"
    cell11.current_sense.power_out.vcc.override_net_name = "CELL11_CURRENT_SENSE_POWER_OUT_VCC"

    cell12._power_5v.vcc.override_net_name = "CELL12_5V_VCC"
    cell12._power_3v3.vcc.override_net_name = "CELL12_3V3_VCC"
    cell12._iso_i2c.scl.override_net_name = "CELL12_I2C_SCL"
    cell12._iso_i2c.sda.override_net_name = "CELL12_I2C_SDA"
    cell12.buck.enable.override_net_name = "CELL12_BUCK_ENABLE"
    cell12.ldo.enable.override_net_name = "CELL12_LDO_ENABLE"
    cell12.load_switch.control.override_net_name = "CELL12_LOAD_SWITCH_CONTROL"
    cell12.output_relay.input.override_net_name = "CELL12_OUTPUT_RELAY_CONTROL"
    cell12.dmm_relay.input.override_net_name = "CELL12_DMM_RELAY_CONTROL"
    cell12.current_sense.output.override_net_name = "CELL12_CURRENT_SENSE_OUTPUT"
    cell12.filter.power_out.vcc.override_net_name = "CELL12_FILTER_POWER_OUT_VCC"
    cell12.buck.power_out.vcc.override_net_name = "CELL12_BUCK_POWER_OUT_VCC"
    cell12.ldo.power_out.vcc.override_net_name = "CELL12_LDO_POWER_OUT_VCC"
    cell12.current_sense.power_out.vcc.override_net_name = "CELL12_CURRENT_SENSE_POWER_OUT_VCC"

    cell13._power_5v.vcc.override_net_name = "CELL13_5V_VCC"
    cell13._power_3v3.vcc.override_net_name = "CELL13_3V3_VCC"
    cell13._iso_i2c.scl.override_net_name = "CELL13_I2C_SCL"
    cell13._iso_i2c.sda.override_net_name = "CELL13_I2C_SDA"
    cell13.buck.enable.override_net_name = "CELL13_BUCK_ENABLE"
    cell13.ldo.enable.override_net_name = "CELL13_LDO_ENABLE"
    cell13.load_switch.control.override_net_name = "CELL13_LOAD_SWITCH_CONTROL"
    cell13.output_relay.input.override_net_name = "CELL13_OUTPUT_RELAY_CONTROL"
    cell13.dmm_relay.input.override_net_name = "CELL13_DMM_RELAY_CONTROL"
    cell13.current_sense.output.override_net_name = "CELL13_CURRENT_SENSE_OUTPUT"
    cell13.filter.power_out.vcc.override_net_name = "CELL13_FILTER_POWER_OUT_VCC"
    cell13.buck.power_out.vcc.override_net_name = "CELL13_BUCK_POWER_OUT_VCC"
    cell13.ldo.power_out.vcc.override_net_name = "CELL13_LDO_POWER_OUT_VCC"
    cell13.current_sense.power_out.vcc.override_net_name = "CELL13_CURRENT_SENSE_POWER_OUT_VCC"

    cell14._power_5v.vcc.override_net_name = "CELL14_5V_VCC"
    cell14._power_3v3.vcc.override_net_name = "CELL14_3V3_VCC"
    cell14._iso_i2c.scl.override_net_name = "CELL14_I2C_SCL"
    cell14._iso_i2c.sda.override_net_name = "CELL14_I2C_SDA"
    cell14.buck.enable.override_net_name = "CELL14_BUCK_ENABLE"
    cell14.ldo.enable.override_net_name = "CELL14_LDO_ENABLE"
    cell14.load_switch.control.override_net_name = "CELL14_LOAD_SWITCH_CONTROL"
    cell14.output_relay.input.override_net_name = "CELL14_OUTPUT_RELAY_CONTROL"
    cell14.dmm_relay.input.override_net_name = "CELL14_DMM_RELAY_CONTROL"
    cell14.current_sense.output.override_net_name = "CELL14_CURRENT_SENSE_OUTPUT"
    cell14.filter.power_out.vcc.override_net_name = "CELL14_FILTER_POWER_OUT_VCC"
    cell14.buck.power_out.vcc.override_net_name = "CELL14_BUCK_POWER_OUT_VCC"
    cell14.ldo.power_out.vcc.override_net_name = "CELL14_LDO_POWER_OUT_VCC"
    cell14.current_sense.power_out.vcc.override_net_name = "CELL14_CURRENT_SENSE_POWER_OUT_VCC"

    cell15._power_5v.vcc.override_net_name = "CELL15_5V_VCC"
    cell15._power_3v3.vcc.override_net_name = "CELL15_3V3_VCC"
    cell15._iso_i2c.scl.override_net_name = "CELL15_I2C_SCL"
    cell15._iso_i2c.sda.override_net_name = "CELL15_I2C_SDA"
    cell15.buck.enable.override_net_name = "CELL15_BUCK_ENABLE"
    cell15.ldo.enable.override_net_name = "CELL15_LDO_ENABLE"
    cell15.load_switch.control.override_net_name = "CELL15_LOAD_SWITCH_CONTROL"
    cell15.output_relay.input.override_net_name = "CELL15_OUTPUT_RELAY_CONTROL"
    cell15.dmm_relay.input.override_net_name = "CELL15_DMM_RELAY_CONTROL"
    cell15.current_sense.output.override_net_name = "CELL15_CURRENT_SENSE_OUTPUT"
    cell15.filter.power_out.vcc.override_net_name = "CELL15_FILTER_POWER_OUT_VCC"
    cell15.buck.power_out.vcc.override_net_name = "CELL15_BUCK_POWER_OUT_VCC"
    cell15.ldo.power_out.vcc.override_net_name = "CELL15_LDO_POWER_OUT_VCC"
    cell15.current_sense.power_out.vcc.override_net_name = "CELL15_CURRENT_SENSE_POWER_OUT_VCC"

    cell16._power_5v.vcc.override_net_name = "CELL16_5V_VCC"
    cell16._power_3v3.vcc.override_net_name = "CELL16_3V3_VCC"
    cell16._iso_i2c.scl.override_net_name = "CELL16_I2C_SCL"
    cell16._iso_i2c.sda.override_net_name = "CELL16_I2C_SDA"
    cell16.buck.enable.override_net_name = "CELL16_BUCK_ENABLE"
    cell16.ldo.enable.override_net_name = "CELL16_LDO_ENABLE"
    cell16.load_switch.control.override_net_name = "CELL16_LOAD_SWITCH_CONTROL"
    cell16.output_relay.input.override_net_name = "CELL16_OUTPUT_RELAY_CONTROL"
    cell16.dmm_relay.input.override_net_name = "CELL16_DMM_RELAY_CONTROL"
    cell16.current_sense.output.override_net_name = "CELL16_CURRENT_SENSE_OUTPUT"
    cell16.filter.power_out.vcc.override_net_name = "CELL16_FILTER_POWER_OUT_VCC"
    cell16.buck.power_out.vcc.override_net_name = "CELL16_BUCK_POWER_OUT_VCC"
    cell16.ldo.power_out.vcc.override_net_name = "CELL16_LDO_POWER_OUT_VCC"
    cell16.current_sense.power_out.vcc.override_net_name = "CELL16_CURRENT_SENSE_POWER_OUT_VCC"